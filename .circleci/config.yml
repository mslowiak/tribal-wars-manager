version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk-browsers

    steps:
      - checkout
      - restore_cache:
          key: circleci-twm-{{ checksum "tribal-wars-manager-backend/pom.xml" }}
      - run: cd tribal-wars-manager-backend && mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: circleci-twm-{{ checksum "tribal-wars-manager-backend/pom.xml" }}
      - run: cd tribal-wars-manager-backend && mvn package -Dmaven.test.skip=true
      - store_artifacts:
          path: tribal-wars-manager-backend/target/tribal-wars-manager-backend-0.0.1-SNAPSHOT.jar

  test:
    docker:
      - image: circleci/openjdk:8-jdk-browsers

    steps:
      - checkout
      - restore_cache:
          key: circleci-twm-{{ checksum "tribal-wars-manager-backend/pom.xml" }}
      - run: cd tribal-wars-manager-backend && mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: circleci-twm-{{ checksum "tribal-wars-manager-backend/pom.xml" }}
      - run: cd tribal-wars-manager-backend && mvn test
      - store_test_results:
          paths:
            - tribal-wars-manager-backend/target/surefire-reports
      - persist_to_workspace:
          root: .
          paths:
            - tribal-wars-manager-backend/target/*

  sonar-export:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    steps:
      - checkout
      - restore_cache:
          key: circleci-twm-{{ checksum "tribal-wars-manager-backend/pom.xml" }}
            - run: cd tribal-wars-manager-backend && mvn dependency:go-offline
            - save_cache:
                paths:
                  - ~/.m2
                key: circleci-twm-{{ checksum "tribal-wars-manager-backend/pom.xml" }}
      - attach_workspace:
          at: .
      - run: cd tribal-wars-manager-backend && mvn sonar:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORGANIZATION -Dsonar.login=$SONAR_API_KEY

  deploy:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: sudo apt-get update -qy
      - run: sudo apt-get install -y ruby-dev
      - run: sudo gem install dpl
      - run: sudo dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY

workflows:
  version: 2
  twm:
    jobs:
      - build
      - test:
          requires:
            - build
      - sonar-export:
          requires:
            - test
      - deploy:
          requires:
            - sonar-export